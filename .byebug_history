continue!
res.round
res=ages.reduce(0.0){|acc, dig| acc+dig} / ages.length.to_f
.round
ages.reduce(0.0){|acc, dig| acc+dig} / ages.length.to_f
ages
res
continue!
next
step
continue!
next
res
next
acc
continue!
res
next
acc
continue!
continue
per[1].map{|x| x['age'].to_f}
per[1].map{|x| x['age']}
per[1].map
per
continue
acc
epr
continue!
per
acc
continue!
per
acc
continue!
cson
continue!
data
cson
continue!
res
continue!
matches.join(',')
matches.flatten
continue!
matches
continue!
matches.map{|per| per['name']}
step
matches
continue!
continue
x['occupation']==occupation
x
next
x
next
x
next
x
continue!
season[1]
season[0]
season
acc
continue!
data.reduce([]) {|acc, season| acc+season.select{|x| x['occupation']==occupation}}
continue!
step
y
step
y
step
y
step
y
continue!
y
continue
continue!
continue
next
season
acc
continue!
season
acc
y
continue!
acc
continue!
continue
person
continue
y
continue
y
continue
y
continue
y
continue
y
continue
y
continue
next
next y
y
next 
y
next
y
next
y
next
y
next
y
next
y
continue!
y
next
y
next
y
next
y[0]
y
continue!
person
continue!
continue
person
continue!
person
continue!
person
continue!
contestants
continue!
data.select
data.map
season
continue!
data
person.each['name']
person
continue!
x
step
x
step
x['occupation']==occupation
x['occupation]==occupation
x
next
x
next
x
next
x
season[1]
season
continue!
next
season
next
season
continue!
person
continue!
person
continue!
x['occupation']==occupation
occupation
x['occupation']
x
next
x
next
x
next
x
continue!
last
back
x
step
occupation
x
next
x
next
x['occupation']
occupation
x['name']
x
continue!
x
continue!
season
continue
season
continue
season
quit
season[1]
season.first
season
q
!!!
end
continue
x[0]
x
step
x
item['name'].split(' ')
item['name']
item
x
step
steo
item['status']
item
quit
quit'
item
itme
step
item
quit
step
continue
step
item
quit
contestants.first.first
contestants.first
contestants
contestants[0]
contenstants[0]
contestants
quit
end
continue
item
quit
cson
item
step
quit
  end
    end
